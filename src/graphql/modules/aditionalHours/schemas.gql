type AditionalHour {
  _id: ID!
  memberId: ID!
  taskId: ID!
  task: Task
  member: Member
  start: DateScalar!
  isPresential: Boolean
  projectId: ID!
  description: String
  project: Project
  """
  Se end é undefined, significa que o usuário ainda está logado
  """
  end: DateScalar
  date: DateScalar
  """
  Duração da sessão em milisegundos,
  A duração pode ser relativa à data de fim, ou, caso não esta exista, a hora atual.
  """
  duration: Int!
  """
  Duração da sessão no formato hh:mm
  A duração pode ser relativa à data de fim, ou, caso não esta exista, a hora atual.
  """
  formatedDuration: String!
}

type Query {
  AditionalHours(memberId: ID!): [AditionalHour]!
}

input AditionalHourCreateInput {
    memberId: ID!
    isPresential: Boolean!
    taskId: ID!
    start: String!
    end: String!
    date: String!
    projectId: ID
    description: String
}

type Mutation {
  sendAditionalHours(
    data: AditionalHourCreateInput!
  ): AditionalHour
  deleteAditionalHours(aditionalHoursId: ID!): AditionalHour
}
